{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Program": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "url",
        "category",
        "commission",
        "cookieDuration",
        "paymentFrequency",
        "minimumPayout",
        "paymentMethods",
        "dateAdded",
        "lastUpdated",
        "status",
        "tags",
        "source"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the program"
        },
        "name": {
          "type": "string",
          "description": "Name of the affiliate program"
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the program"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to the program's website or signup page"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Categories the program belongs to"
        },
        "commission": {
          "type": "object",
          "required": ["type", "value"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["percentage", "fixed", "tiered"],
              "description": "Type of commission structure"
            },
            "value": {
              "oneOf": [
                {
                  "type": "number",
                  "description": "Commission value for percentage or fixed types"
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number"
                  },
                  "description": "Tiered commission structure with tier names as keys and values as commission amounts"
                }
              ]
            },
            "details": {
              "type": "string",
              "description": "Additional details about the commission structure"
            }
          }
        },
        "cookieDuration": {
          "type": "integer",
          "minimum": 0,
          "description": "Cookie duration in days"
        },
        "paymentFrequency": {
          "type": "string",
          "enum": ["weekly", "biweekly", "monthly", "quarterly"],
          "description": "Frequency of payments from the program"
        },
        "minimumPayout": {
          "type": "number",
          "minimum": 0,
          "description": "Minimum amount required for payout"
        },
        "paymentMethods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Available payment methods"
        },
        "epc": {
          "type": "number",
          "description": "Earnings per click"
        },
        "conversionRate": {
          "type": "number",
          "description": "Conversion rate percentage"
        },
        "dateAdded": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the program was added to the system"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the program was last updated"
        },
        "status": {
          "type": "string",
          "enum": ["active", "inactive", "pending"],
          "description": "Current status of the program"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags associated with the program"
        },
        "source": {
          "type": "string",
          "description": "Source of the program data (aggregator name, API, etc.)"
        },
        "sourceId": {
          "type": "string",
          "description": "Original ID from the source"
        },
        "metrics": {
          "$ref": "#/definitions/ProgramMetrics"
        }
      }
    },
    "ProgramMetrics": {
      "type": "object",
      "required": ["clicks", "conversions", "revenue", "roi"],
      "properties": {
        "clicks": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of clicks"
        },
        "conversions": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of conversions"
        },
        "revenue": {
          "type": "number",
          "minimum": 0,
          "description": "Total revenue generated"
        },
        "roi": {
          "type": "number",
          "description": "Return on investment"
        },
        "averageOrderValue": {
          "type": "number",
          "minimum": 0,
          "description": "Average order value"
        },
        "lastClickDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the last click"
        },
        "lastConversionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the last conversion"
        },
        "trend": {
          "type": "object",
          "properties": {
            "daily": {
              "type": "number",
              "description": "Daily trend percentage"
            },
            "weekly": {
              "type": "number",
              "description": "Weekly trend percentage"
            },
            "monthly": {
              "type": "number",
              "description": "Monthly trend percentage"
            }
          }
        }
      }
    },
    "Connection": {
      "type": "object",
      "required": [
        "id",
        "name",
        "type",
        "url",
        "status",
        "credentials",
        "settings",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the connection"
        },
        "name": {
          "type": "string",
          "description": "Name of the connection"
        },
        "type": {
          "type": "string",
          "enum": ["aggregator", "api", "manual"],
          "description": "Type of connection"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the connection source"
        },
        "description": {
          "type": "string",
          "description": "Description of the connection"
        },
        "status": {
          "$ref": "#/definitions/ConnectionStatus"
        },
        "credentials": {
          "$ref": "#/definitions/ApiCredentials"
        },
        "settings": {
          "type": "object",
          "required": ["refreshInterval", "autoSync"],
          "properties": {
            "refreshInterval": {
              "type": "integer",
              "minimum": 0,
              "description": "Refresh interval in minutes"
            },
            "autoSync": {
              "type": "boolean",
              "description": "Whether to automatically sync"
            },
            "filters": {
              "type": "object",
              "description": "Filters to apply during sync"
            }
          }
        },
        "lastSync": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the last synchronization"
        },
        "nextScheduledSync": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the next scheduled synchronization"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the connection was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the connection was last updated"
        }
      }
    },
    "ConnectionStatus": {
      "type": "object",
      "required": ["state", "lastChecked"],
      "properties": {
        "state": {
          "type": "string",
          "enum": ["connected", "disconnected", "error", "syncing"],
          "description": "Current state of the connection"
        },
        "lastChecked": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the connection was last checked"
        },
        "message": {
          "type": "string",
          "description": "Status message"
        },
        "errorCode": {
          "type": "string",
          "description": "Error code if applicable"
        },
        "errorDetails": {
          "type": "string",
          "description": "Detailed error information"
        },
        "syncProgress": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Synchronization progress percentage"
        }
      }
    },
    "ApiCredentials": {
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string",
          "description": "API key"
        },
        "apiSecret": {
          "type": "string",
          "description": "API secret"
        },
        "username": {
          "type": "string",
          "description": "Username for authentication"
        },
        "password": {
          "type": "string",
          "description": "Password for authentication"
        },
        "token": {
          "type": "string",
          "description": "Authentication token"
        },
        "tokenExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "Token expiration date"
        },
        "oauth": {
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "OAuth client ID"
            },
            "clientSecret": {
              "type": "string",
              "description": "OAuth client secret"
            },
            "refreshToken": {
              "type": "string",
              "description": "OAuth refresh token"
            },
            "accessToken": {
              "type": "string",
              "description": "OAuth access token"
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time",
              "description": "OAuth token expiration date"
            }
          }
        }
      }
    },
    "DiscoveryResult": {
      "type": "object",
      "required": ["id", "query", "timestamp", "duration", "status", "results", "stats"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the discovery result"
        },
        "query": {
          "type": "string",
          "description": "Query used for discovery"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the discovery operation"
        },
        "duration": {
          "type": "number",
          "minimum": 0,
          "description": "Duration of the discovery operation in seconds"
        },
        "status": {
          "type": "string",
          "enum": ["completed", "in_progress", "failed"],
          "description": "Status of the discovery operation"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryItem"
          },
          "description": "Discovery results"
        },
        "stats": {
          "type": "object",
          "required": ["totalFound", "newPrograms", "existingPrograms", "potentialMatches"],
          "properties": {
            "totalFound": {
              "type": "integer",
              "minimum": 0,
              "description": "Total number of items found"
            },
            "newPrograms": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of new programs found"
            },
            "existingPrograms": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of existing programs found"
            },
            "potentialMatches": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of potential matches found"
            }
          }
        },
        "error": {
          "type": "string",
          "description": "Error message if the discovery operation failed"
        }
      }
    },
    "DiscoveryItem": {
      "type": "object",
      "required": ["id", "url", "title", "description", "matchType", "confidence", "processed", "addedToIndex"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the discovery item"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the discovered item"
        },
        "title": {
          "type": "string",
          "description": "Title of the discovered item"
        },
        "description": {
          "type": "string",
          "description": "Description of the discovered item"
        },
        "matchType": {
          "type": "string",
          "enum": ["exact", "partial", "potential"],
          "description": "Type of match"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Confidence score percentage"
        },
        "programDetails": {
          "type": "object",
          "description": "Partial program details extracted from the discovery"
        },
        "processed": {
          "type": "boolean",
          "description": "Whether the item has been processed"
        },
        "addedToIndex": {
          "type": "boolean",
          "description": "Whether the item has been added to the index"
        },
        "notes": {
          "type": "string",
          "description": "Additional notes about the discovery item"
        }
      }
    },
    "SystemMetrics": {
      "type": "object",
      "required": ["timestamp", "cpu", "memory", "storage", "network", "indexStats", "apiStats"],
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the metrics"
        },
        "cpu": {
          "type": "object",
          "required": ["usage"],
          "properties": {
            "usage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "CPU usage percentage"
            },
            "temperature": {
              "type": "number",
              "description": "CPU temperature in Celsius"
            }
          }
        },
        "memory": {
          "type": "object",
          "required": ["total", "used", "percentage"],
          "properties": {
            "total": {
              "type": "number",
              "minimum": 0,
              "description": "Total memory in MB"
            },
            "used": {
              "type": "number",
              "minimum": 0,
              "description": "Used memory in MB"
            },
            "percentage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Memory usage percentage"
            }
          }
        },
        "storage": {
          "type": "object",
          "required": ["total", "used", "percentage"],
          "properties": {
            "total": {
              "type": "number",
              "minimum": 0,
              "description": "Total storage in MB"
            },
            "used": {
              "type": "number",
              "minimum": 0,
              "description": "Used storage in MB"
            },
            "percentage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Storage usage percentage"
            }
          }
        },
        "network": {
          "type": "object",
          "required": ["bytesIn", "bytesOut", "requestsPerMinute"],
          "properties": {
            "bytesIn": {
              "type": "number",
              "minimum": 0,
              "description": "Bytes received"
            },
            "bytesOut": {
              "type": "number",
              "minimum": 0,
              "description": "Bytes sent"
            },
            "requestsPerMinute": {
              "type": "number",
              "minimum": 0,
              "description": "Requests per minute"
            }
          }
        },
        "indexStats": {
          "type": "object",
          "required": ["totalPrograms", "activePrograms", "lastIndexUpdate", "indexSize"],
          "properties": {
            "totalPrograms": {
              "type": "integer",
              "minimum": 0,
              "description": "Total number of programs in the index"
            },
            "activePrograms": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of active programs in the index"
            },
            "lastIndexUpdate": {
              "type": "string",
              "format": "date-time",
              "description": "Date of the last index update"
            },
            "indexSize": {
              "type": "number",
              "minimum": 0,
              "description": "Size of the index in MB"
            }
          }
        },
        "apiStats": {
          "type": "object",
          "required": ["requestsTotal", "requestsPerHour", "averageResponseTime", "errorRate"],
          "properties": {
            "requestsTotal": {
              "type": "integer",
              "minimum": 0,
              "description": "Total number of API requests"
            },
            "requestsPerHour": {
              "type": "number",
              "minimum": 0,
              "description": "API requests per hour"
            },
            "averageResponseTime": {
              "type": "number",
              "minimum": 0,
              "description": "Average API response time in ms"
            },
            "errorRate": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "API error rate percentage"
            }
          }
        }
      }
    },
    "Budget": {
      "type": "object",
      "required": [
        "id",
        "name",
        "totalAmount",
        "currency",
        "startDate",
        "endDate",
        "allocations",
        "status",
        "spentAmount",
        "remainingAmount",
        "performance"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the budget"
        },
        "name": {
          "type": "string",
          "description": "Name of the budget"
        },
        "totalAmount": {
          "type": "number",
          "minimum": 0,
          "description": "Total budget amount"
        },
        "currency": {
          "type": "string",
          "description": "Currency of the budget"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date of the budget period"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date of the budget period"
        },
        "allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetAllocation"
          },
          "description": "Budget allocations"
        },
        "status": {
          "type": "string",
          "enum": ["active", "paused", "completed"],
          "description": "Status of the budget"
        },
        "spentAmount": {
          "type": "number",
          "minimum": 0,
          "description": "Amount spent from the budget"
        },
        "remainingAmount": {
          "type": "number",
          "minimum": 0,
          "description": "Remaining amount in the budget"
        },
        "performance": {
          "type": "object",
          "required": ["roi", "revenue", "profit"],
          "properties": {
            "roi": {
              "type": "number",
              "description": "Return on investment"
            },
            "revenue": {
              "type": "number",
              "minimum": 0,
              "description": "Total revenue generated"
            },
            "profit": {
              "type": "number",
              "description": "Total profit"
            }
          }
        }
      }
    },
    "BudgetAllocation": {
      "type": "object",
      "required": ["id", "targetType", "targetId", "amount", "spentAmount", "performance"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the budget allocation"
        },
        "targetType": {
          "type": "string",
          "enum": ["program", "category", "tag"],
          "description": "Type of allocation target"
        },
        "targetId": {
          "type": "string",
          "description": "Identifier of the allocation target"
        },
        "amount": {
          "type": "number",
          "minimum": 0,
          "description": "Allocated amount"
        },
        "spentAmount": {
          "type": "number",
          "minimum": 0,
          "description": "Amount spent from the allocation"
        },
        "performance": {
          "type": "object",
          "required": ["roi", "revenue", "profit"],
          "properties": {
            "roi": {
              "type": "number",
              "description": "Return on investment"
            },
            "revenue": {
              "type": "number",
              "minimum": 0,
              "description": "Total revenue generated"
            },
            "profit": {
              "type": "number",
              "description": "Total profit"
            }
          }
        },
        "rules": {
          "type": "object",
          "properties": {
            "minPerformance": {
              "type": "number",
              "description": "Minimum performance threshold"
            },
            "maxSpendPerDay": {
              "type": "number",
              "minimum": 0,
              "description": "Maximum spend per day"
            },
            "pauseThreshold": {
              "type": "number",
              "description": "Threshold to pause allocation"
            }
          }
        }
      }
    },
    "AutomationTrigger": {
      "type": "object",
      "required": ["id", "name", "type", "enabled", "action", "parameters"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the automation trigger"
        },
        "name": {
          "type": "string",
          "description": "Name of the automation trigger"
        },
        "type": {
          "type": "string",
          "enum": ["scheduled", "event-based", "threshold"],
          "description": "Type of trigger"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the trigger is enabled"
        },
        "action": {
          "type": "string",
          "enum": ["discovery", "sync", "budget-adjustment", "notification"],
          "description": "Action to perform when triggered"
        },
        "schedule": {
          "type": "object",
          "required": ["frequency"],
          "properties": {
            "frequency": {
              "type": "string",
              "enum": ["hourly", "daily", "weekly", "monthly"],
              "description": "Frequency of the schedule"
            },
            "dayOfWeek": {
              "type": "integer",
              "minimum": 0,
              "maximum": 6,
              "description": "Day of the week (0-6, Sunday to Saturday)"
            },
            "dayOfMonth": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31,
              "description": "Day of the month (1-31)"
            },
            "hour": {
              "type": "integer",
              "minimum": 0,
              "maximum": 23,
              "description": "Hour (0-23)"
            },
            "minute": {
              "type": "integer",
              "minimum": 0,
              "maximum": 59,
              "description": "Minute (0-59)"
            }
          }
        },
        "event": {
          "type": "object",
          "required": ["type", "conditions"],
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of event"
            },
            "conditions": {
              "type": "object",
              "description": "Conditions for the event"
            }
          }
        },
        "threshold": {
          "type": "object",
          "required": ["metric", "operator", "value"],
          "properties": {
            "metric": {
              "type": "string",
              "description": "Metric to monitor"
            },
            "operator": {
              "type": "string",
              "enum": [">", "<", "==", ">=", "<="],
              "description": "Comparison operator"
            },
            "value": {
              "type": "number",
              "description": "Threshold value"
            }
          }
        },
        "parameters": {
          "type": "object",
          "description": "Parameters for the action"
        },
        "lastTriggered": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the trigger was last activated"
        },
        "nextScheduled": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the trigger is next scheduled to run"
        }
      }
    },
    "UserSettings": {
      "type": "object",
      "required": ["id", "userId", "theme", "notifications", "displayPreferences"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the settings"
        },
        "userId": {
          "type": "string",
          "description": "User identifier"
        },
        "theme": {
          "type": "string",
          "enum": ["light", "dark", "system"],
          "description": "UI theme preference"
        },
        "notifications": {
          "type": "object",
          "required": ["email", "browser"],
          "properties": {
            "email": {
              "type": "boolean",
              "description": "Whether to send email notifications"
            },
            "browser": {
              "type": "boolean",
              "description": "Whether to show browser notifications"
            },
            "slack": {
              "type": "boolean",
              "description": "Whether to send Slack notifications"
            },
            "slackWebhook": {
              "type": "string",
              "description": "Slack webhook URL"
            }
          }
        },
        "displayPreferences": {
          "type": "object",
          "required": ["defaultView", "tableColumns", "graphLayout", "resultsPerPage"],
          "properties": {
            "defaultView": {
              "type": "string",
              "enum": ["table", "graph"],
              "description": "Default view type"
            },
            "tableColumns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Visible table columns"
            },
            "graphLayout": {
              "type": "string",
              "enum": ["force", "circular", "hierarchical"],
              "description": "Graph layout type"
            },
            "resultsPerPage": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of results to show per page"
            }
          }
        },
        "apiAccess": {
          "type": "object",
          "required": ["enabled"],
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether API access is enabled"
            },
            "apiKey": {
              "type": "string",
              "description": "API key for access"
            },
            "allowedIps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of allowed IP addresses"
            }
          }
        }
      }
    }
  }
}
